#!/usr/bin/python3
import os
from scapy.all import *
from prettytable import PrettyTable
from collections import Counter

##Defining the variables, mostly used later in the code.
pcap=rdpcap(input("What is your pcap? "))


srcIP=[]
dstIP=[]
srcdst=[]
sport=[]
dport=[]
port=[]
for pkt in pcap:
    if IP in pkt:
        try:
            srcIP.append(pkt[IP].src)
            dstIP.append(pkt[IP].dst)
            srcdst.append(pkt[IP].src + ","  + pkt[IP].dst)
            dport.append((pkt[IP].dport))
            sport.append((pkt[IP].sport))
            port.append((pkt[IP].sport))
            port.append((pkt[IP].dport))
        except:
            pass

packets=input("Remind me of the pcap again? I am just checking, because I'm insecure :) ")
filename=input("What would you like to name the text file of the log? It should be FILENAME.txt")
os.system("tshark -r " + packets + " -T fields -e frame.number -e _ws.col.Time -e _ws.col.Source -e _ws.col.Destination -e _ws.col.Protocol -e _ws.col.Info > " + filename)
os.system("head -n 30 " + filename)

print(f'\n\n\nHi there! Welcome to Log Lollygagging, also called Project LLAMA. This program will provide key information, and also allow you to parse through log files from pcaps. The program will walk you through a number of questions, for which you will need to input choices or information pertaining to what you need. The above information is a capture of the pcap you entered! It shows the fields, which are important later. \n\n\n')
def menu():
    print("[1] Parse the File")
    print("[2] Frequency Tables")
    print("[3] Most Common IP/Port")
    print("[0] Exit")
menu()
option=int(input("What are you looking for / looking to do? Type just the number to select the option! "))

while option != 0:
    if option == 1:
        parse1=input("\nExcellent! You've chosen to parse the file. Looking at the information above, what is it you're looking for? Field 1 (type Packet), Field 2 (type Time), Field 3 (type Src IP), Field 4 (type Dst IP), Field 5 (type Protocol), Field 6 (type Other). ")
    elif option == 2:
        info1=input("\nRight-o. Are you looking to find the frequencies of IPs and Ports (type Frequencies)? Are you just wanting the most common IPs and Ports (type Most Common)? ")
    elif option == 3:
        cnt= Counter()
        for IP in srcIP:
            cnt[IP] += 1

        for IP in dstIP:
            cnt[IP] += 1

        dcnt= Counter()
        for IP in dstIP:
            dcnt[IP] += 1

        srcs = [*set(srcIP)]
        srctable = PrettyTable(["Src IP", "Count"])
        for ip, count in cnt.most_common():
            srctable.add_row([ip, count])
        print(srctable)

        dsttable = PrettyTable(["Dst IP", "Count"])
        for ip, count in dcnt.most_common():
            dsttable.add_row([ip, count])
        print(dsttable)

        portcnt = Counter()
        for port in sport:
            portcnt[port] +=1
        srcandporttable=PrettyTable(["Ports", "Count"])
        for port, count in portcnt.most_common():
            srcandporttable.add_row([port, count])
        print(srcandporttable)
    elif option == 4:
        cnt1= Counter()
        for IP in srcIP:
            cnt1[IP] += 1
        dcnt1= Counter()
        for IP in dstIP:
            dcnt1[IP] += 1

        srcs = [*set(srcIP)]
        srctablemost= PrettyTable(["Src IP", "Count"])
        for ip, count in cnt1.most_common():
            srctablemost.add_row([ip, count])

        dsttablemost=PrettyTable(["Dst IP", "Count"])
        for ip, count in dcnt1.most_common():
            dsttablemost.add_row([ip, count])

        portcnt1= Counter()
        for port in sport:
            portcnt1[port] +=1
        porttablemost=PrettyTable(["Most Common Port", "Count"])
        for port, count in portcnt1.most_common():
            porttablemost.add_row([port, count])
        print(porttablemost[0])
        print(f'Your most frequent source and destination IP, as well as their frequency are Source:\n {srctablemost[0]} \n and Destination: \n{dsttablemost[0]}')
print(f'Alrighty then! Thanks for visiting Log Lollygagging. We hope it helped! Happy Log Hunting')
